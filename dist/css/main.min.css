.main-color{color:#0071e3;font-weight:700}*{margin:0;padding:0;box-sizing:border-box}html{scroll-behavior:smooth;font-size:62.5%}body{font-size:1.6rem;font-family:Ubuntu,sans-serif}.wrapper{max-width:1240px;margin:0 auto}.intro{display:flex;justify-content:center;align-items:center;position:relative;background-image:url(../../dist/img/intro-bg1.jpg);background-position:50%;background-size:cover;height:100vh;font-family:Overpass}.intro-bg{position:absolute;width:100%;height:100vh;background-color:rgba(0,0,10,.3)}.intro__text-heading{display:flex;flex-direction:column;justify-content:center;align-items:center;color:#fff}.intro__text-heading h1{font-size:3rem;z-index:1}.intro__text-heading h2{font-size:5rem;z-index:1;color:#0071e3}.intro__text-heading h2 span{color:#fff;font-size:3rem;vertical-align:10px}.ofert{display:flex;flex-direction:column;text-align:center;margin-top:2em}.ofert-heading{padding:1em;font-family:Overpass}.ofert-heading--title{font-size:3rem;margin-bottom:1em}.ofert-heading--description{font-weight:300;font-size:1.8rem}.ofert__box{display:flex;flex-direction:column}.ofert__box-img{padding:1em}.ofert__box-img img{max-width:100%;border-radius:10px;box-shadow:0 0 30px rgba(0,0,10,.3)}.ofert__box-text{padding:1em;line-height:150%;font-size:1.6rem;font-weight:300;text-align:left}@media (min-width:576px){.ofert-heading--title{font-size:4rem}.ofert-heading--description{font-size:2rem}.ofert__box-text{width:80%;margin:0 auto}}@media (min-width:768px){.ofert-heading--title{font-size:5rem}.ofert-heading--description{font-size:2.4rem}.ofert__box-text{width:70%;font-size:1.8rem}}@media (min-width:992px){.ofert-heading--title{font-size:5rem}.ofert-heading--description{font-size:3rem}.ofert__box{flex-direction:row}.ofert__box-text{width:50%;font-size:1.8rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9jb21wb25lbnRzLnNjc3MiLCJfY29sb3JzLnNjc3MiLCJtYWluLmNzcyIsIm1haW4uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0QkEsWUFDSSxjQzdCUSxBRDhCUixlQUFBLENFM0JKLEFDQUEsRUFDSSxTQUFBLEFBQ0EsVUFBQSxBQUNBLHFCQUFBLENER0osQUNBQSxLQUNJLHVCQUFBLEFBQ0EsZUFBQSxDREdKLEFDQUEsS0FDSSxpQkFBQSxBQUNBLDZCQUFBLENER0osQUNDQSxTQUNJLGlCQUFBLEFBQ0EsYUFBQSxDREVKLEFDQ0EsT0FDSSxhQUFBLEFBQ0EsdUJBQUEsQUFDQSxtQkFBQSxBQUNBLGtCQUFBLEFBQ0EsbURBQUEsQUFDQSx3QkFBQSxBQUNBLHNCQUFBLEFBQ0EsYUFBQSxBQUNBLG9CQUFBLENERUosQUNBSSxVQUNJLGtCQUFBLEFBQ0EsV0FBQSxBQUNBLGFBQUEsQUFDQSxnQ0Z0Q08sQ0N3Q2YsQUNJUSxxQkFDSSxhQUFBLEFBQ0Esc0JBQUEsQUFDQSx1QkFBQSxBQUNBLG1CQUFBLEFBQ0EsVUZsREMsQ0NnRGIsQUNJWSx3QkFDSSxlQUFBLEFBQ0EsU0FBQSxDREZoQixBQ0tZLHdCQUNJLGVBQUEsQUFDQSxVQUFBLEFBQ0EsYUY3REosQ0MwRFosQUNLZ0IsNkJBQ0ksV0YvRFAsQUVnRU8sZUFBQSxBQUNBLG1CQUFBLENESHBCLEFDVUEsT0FDSSxhQUFBLEFBQ0Esc0JBQUEsQUFDQSxrQkFBQSxBQUNBLGNBQUEsQ0RQSixBQ1NJLGVBQ0ksWUFBQSxBQUNBLG9CQUFBLENEUFIsQUNTUSxzQkFDSSxlQUFBLEFBQ0EsaUJBQUEsQ0RQWixBQ1VRLDRCQUNJLGdCQUFBLEFBQ0EsZ0JBQUEsQ0RSWixBQ2FJLFlBQ0ksYUFBQSxBQUNBLHFCQUFBLENEWFIsQUNhUSxnQkFDSSxXQUFBLENEWFosQUNhWSxvQkFDSSxlQUFBLEFBQ0EsbUJBQUEsQUFDQSxtQ0FBQSxDRFhoQixBQ2VRLGlCQUNJLFlBQUEsQUFDQSxpQkFBQSxBQUNBLGlCQUFBLEFBQ0EsZ0JBQUEsQUFDQSxlQUFBLENEYlosQUNzQkEseUJBS1ksc0JBQ0ksY0FBQSxDRHZCZCxBQzBCVSw0QkFDSSxjQUFBLENEeEJkLEFDNEJNLGlCQUNJLFVBQUEsQUFDQSxhQUFBLENEMUJWLENBQ0YsQUMrQkEseUJBR1ksc0JBQ0ksY0FBQSxDRC9CZCxBQ2tDVSw0QkFDSSxnQkFBQSxDRGhDZCxBQ3NDVSxpQkFDSSxVQUFBLEFBQ0EsZ0JBQUEsQ0RwQ2QsQ0FDRixBQ3lDQSx5QkFHWSxzQkFDSSxjQUFBLENEekNkLEFDNENVLDRCQUNJLGNBQUEsQ0QxQ2QsQUM4Q00sWUFDSSxrQkFBQSxDRDVDVixBQzhDVSxpQkFDSSxVQUFBLEFBQ0EsZ0JBQUEsQ0Q1Q2QsQ0FDRiIsImZpbGUiOiJtYWluLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAuc2VjdGlvbi1oZWFkaW5nIHtcbi8vICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbi8vICAgICAmOjphZnRlciB7XG4vLyAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4vLyAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuLy8gICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4vLyAgICAgICAgIHJpZ2h0OiAxMHB4O1xuLy8gICAgICAgICB0b3A6IDUwJTtcbi8vICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuLy8gICAgICAgICB3aWR0aDogNTBweDtcbi8vICAgICAgICAgaGVpZ2h0OiAycHg7XG4vLyAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluLWJsdWU7XG4vLyAgICAgfVxuXG4vLyAgICAgJjo6YmVmb3JlIHtcbi8vICAgICAgICAgY29udGVudDogXCJcIjtcbi8vICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4vLyAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbi8vICAgICAgICAgbGVmdDogMTBweDtcbi8vICAgICAgICAgdG9wOiA1MCU7XG4vLyAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbi8vICAgICAgICAgd2lkdGg6IDUwcHg7XG4vLyAgICAgICAgIGhlaWdodDogMnB4O1xuLy8gICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbi1ibHVlO1xuLy8gICAgIH1cbi8vIH1cblxuLm1haW4tY29sb3Ige1xuICAgIGNvbG9yOiAkbWFpbi1ibHVlO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59IiwiJG1haW4tYmx1ZTogIzAwNzFlMztcbiRwdXJlLXdoaXRlOiAjZmZmO1xuJGJsYWNrLXNoYWRvdzogcmdiYSgwLCAwLCAxMCwgMC4zKTsiLCIubWFpbi1jb2xvciB7XG4gIGNvbG9yOiAjMDA3MWUzO1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4qIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sIHtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG4gIGZvbnQtc2l6ZTogNjIuNSU7XG59XG5cbmJvZHkge1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgZm9udC1mYW1pbHk6IFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG59XG5cbi53cmFwcGVyIHtcbiAgbWF4LXdpZHRoOiAxMjQwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uaW50cm8ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9kaXN0L2ltZy9pbnRyby1iZzEuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGhlaWdodDogMTAwdmg7XG4gIGZvbnQtZmFtaWx5OiBcIk92ZXJwYXNzXCI7XG59XG4uaW50cm8tYmcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDEwLCAwLjMpO1xufVxuLmludHJvX190ZXh0LWhlYWRpbmcge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICNmZmY7XG59XG4uaW50cm9fX3RleHQtaGVhZGluZyBoMSB7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbiAgei1pbmRleDogMTtcbn1cbi5pbnRyb19fdGV4dC1oZWFkaW5nIGgyIHtcbiAgZm9udC1zaXplOiA1cmVtO1xuICB6LWluZGV4OiAxO1xuICBjb2xvcjogIzAwNzFlMztcbn1cbi5pbnRyb19fdGV4dC1oZWFkaW5nIGgyIHNwYW4ge1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1zaXplOiAzcmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogMTBweDtcbn1cblxuLm9mZXJ0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tdG9wOiAyZW07XG59XG4ub2ZlcnQtaGVhZGluZyB7XG4gIHBhZGRpbmc6IDFlbTtcbiAgZm9udC1mYW1pbHk6IFwiT3ZlcnBhc3NcIjtcbn1cbi5vZmVydC1oZWFkaW5nLS10aXRsZSB7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuLm9mZXJ0LWhlYWRpbmctLWRlc2NyaXB0aW9uIHtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1zaXplOiAxLjhyZW07XG59XG4ub2ZlcnRfX2JveCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4ub2ZlcnRfX2JveC1pbWcge1xuICBwYWRkaW5nOiAxZW07XG59XG4ub2ZlcnRfX2JveC1pbWcgaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBib3gtc2hhZG93OiAwIDAgMzBweCByZ2JhKDAsIDAsIDEwLCAwLjMpO1xufVxuLm9mZXJ0X19ib3gtdGV4dCB7XG4gIHBhZGRpbmc6IDFlbTtcbiAgbGluZS1oZWlnaHQ6IDE1MCU7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xuICBmb250LXdlaWdodDogMzAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLm9mZXJ0LWhlYWRpbmctLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDRyZW07XG4gIH1cbiAgLm9mZXJ0LWhlYWRpbmctLWRlc2NyaXB0aW9uIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbiAgLm9mZXJ0X19ib3gtdGV4dCB7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5vZmVydC1oZWFkaW5nLS10aXRsZSB7XG4gICAgZm9udC1zaXplOiA1cmVtO1xuICB9XG4gIC5vZmVydC1oZWFkaW5nLS1kZXNjcmlwdGlvbiB7XG4gICAgZm9udC1zaXplOiAyLjRyZW07XG4gIH1cbiAgLm9mZXJ0X19ib3gtdGV4dCB7XG4gICAgd2lkdGg6IDcwJTtcbiAgICBmb250LXNpemU6IDEuOHJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5vZmVydC1oZWFkaW5nLS10aXRsZSB7XG4gICAgZm9udC1zaXplOiA1cmVtO1xuICB9XG4gIC5vZmVydC1oZWFkaW5nLS1kZXNjcmlwdGlvbiB7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICB9XG4gIC5vZmVydF9fYm94IHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICB9XG4gIC5vZmVydF9fYm94LXRleHQge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgZm9udC1zaXplOiAxLjhyZW07XG4gIH1cbn0iLCJAaW1wb3J0ICcuL19jb2xvcnMuc2Nzcyc7XG5AaW1wb3J0ICcuL19jb21wb25lbnRzLnNjc3MnO1xuXG4qIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sIHtcbiAgICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbiAgICBmb250LXNpemU6IDYyLjUlO1xufVxuXG5ib2R5IHtcbiAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgICBmb250LWZhbWlseTogJ1VidW50dScsIHNhbnMtc2VyaWY7XG59XG5cblxuLndyYXBwZXIge1xuICAgIG1heC13aWR0aDogMTI0MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uaW50cm8ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi9kaXN0L2ltZy9pbnRyby1iZzEuanBnJyk7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBmb250LWZhbWlseTogJ092ZXJwYXNzJztcblxuICAgICYtYmcge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmxhY2stc2hhZG93O1xuICAgIH1cblxuXG4gICAgJl9fdGV4dCB7XG5cbiAgICAgICAgJi1oZWFkaW5nIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgY29sb3I6ICRwdXJlLXdoaXRlO1xuXG4gICAgICAgICAgICAmIGgxIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDNyZW07XG4gICAgICAgICAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJiBoMiB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiA1cmVtO1xuICAgICAgICAgICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRtYWluLWJsdWU7XG5cbiAgICAgICAgICAgICAgICAmIHNwYW4ge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHB1cmUtd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICAgICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IDEwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4ub2ZlcnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMmVtO1xuXG4gICAgJi1oZWFkaW5nIHtcbiAgICAgICAgcGFkZGluZzogMWVtO1xuICAgICAgICBmb250LWZhbWlseTogJ092ZXJwYXNzJztcblxuICAgICAgICAmLS10aXRsZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDNyZW07XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgICAgIH1cblxuICAgICAgICAmLS1kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxLjhyZW07XG4gICAgICAgIH1cbiAgICB9XG5cblxuICAgICZfX2JveCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgICAgICAgJi1pbWcge1xuICAgICAgICAgICAgcGFkZGluZzogMWVtO1xuXG4gICAgICAgICAgICAmIGltZyB7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMCAwIDMwcHggJGJsYWNrLXNoYWRvdztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICYtdGV4dCB7XG4gICAgICAgICAgICBwYWRkaW5nOiAxZW07XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMTUwJTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vID09PT09PT09PT09PT09PT09PVxuLy8gICAgIE1FRElBIFxuLy8gPT09PT09PT09PT09PT09PT09XG5cbkBtZWRpYShtaW4td2lkdGg6NTc2cHgpIHtcbiAgICAuaW50cm8ge31cblxuICAgIC5vZmVydCB7XG4gICAgICAgICYtaGVhZGluZyB7XG4gICAgICAgICAgICAmLS10aXRsZSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiA0cmVtO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmLS1kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJl9fYm94LXRleHQge1xuICAgICAgICAgICAgd2lkdGg6IDgwJTtcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5cbkBtZWRpYShtaW4td2lkdGg6NzY4cHgpIHtcbiAgICAub2ZlcnQge1xuICAgICAgICAmLWhlYWRpbmcge1xuICAgICAgICAgICAgJi0tdGl0bGUge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXJlbTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJi0tZGVzY3JpcHRpb24ge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMi40cmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJl9fYm94IHtcblxuICAgICAgICAgICAgJi10ZXh0IHtcbiAgICAgICAgICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS44cmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEobWluLXdpZHRoOjk5MnB4KSB7XG4gICAgLm9mZXJ0IHtcbiAgICAgICAgJi1oZWFkaW5nIHtcbiAgICAgICAgICAgICYtLXRpdGxlIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDVyZW07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICYtLWRlc2NyaXB0aW9uIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDNyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmX19ib3gge1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcblxuICAgICAgICAgICAgJi10ZXh0IHtcbiAgICAgICAgICAgICAgICB3aWR0aDogNTAlO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS44cmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSJdfQ== */
