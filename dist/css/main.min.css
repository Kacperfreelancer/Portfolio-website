.common-input{height:40px;line-height:28px;padding:.2em 1em;padding-left:2.5rem;border:2px solid transparent;border-radius:8px;outline:none;background-color:#f3f3f4;color:#0d0c22;transition:.3s ease;margin:.5em auto;width:80%;font-family:Ubuntu}textarea{resize:vertical;min-height:200px}.common-btn{padding:1.3em 3em;margin:2em 0;font-size:12px;text-transform:uppercase;letter-spacing:2.5px;font-weight:700;color:#000;background-color:#fff;border:none;border-radius:45px;box-shadow:0 8px 15px rgba(0,0,0,.1);transition:all .3s ease 0s;cursor:pointer;outline:none;font-family:Overpass}.common-btn:hover{background-color:#0071e3;box-shadow:0 15px 20px rgba(30,36,204,.4);color:#fff;transform:translateY(-7px)}.common-btn:active{transform:translateY(-1px)}.section-heading{text-align:center;margin:1em 0;font-size:4rem}.main-color{color:#0071e3;font-weight:700}*{margin:0;padding:0;box-sizing:border-box}html{scroll-behavior:smooth;font-size:62.5%}body{font-size:1.6rem;font-family:Ubuntu,sans-serif}img{max-width:100%}.wrapper{max-width:1240px;margin:0 auto}.burger-icon{box-sizing:content-box;top:25px;right:25px;position:fixed;width:50px;padding:1em;z-index:3;cursor:pointer}.burger-icon:after,.burger-icon:before,.burger-icon div{background-color:#fff;content:"";display:block;height:6px;border-radius:3px;margin:7px 0;transition:.5s}.burger-icon.black:after,.burger-icon.black:before,.burger-icon.black div{background-color:#000}.burger-icon.active:before{transform:translateY(12px) rotate(135deg)}.burger-icon.active:after{transform:translateY(-12px) rotate(-135deg)}.burger-icon.active div{transform:scale(0)}.nav-mobile{height:100vh;width:100%;position:fixed;top:0;right:0;display:flex;justify-content:center;align-items:center;background-image:linear-gradient(162deg,#0071e3 22%,#0035d9 79%);z-index:2;text-align:center;transform:translateX(100%);transition:transform 1s}.nav-mobile__menu{list-style:none;padding:2em}.nav-mobile__menu>li{margin:1em 0;padding:1em}.nav-mobile__menu-item{text-transform:uppercase;letter-spacing:1px;text-decoration:none;color:#fff;font-size:3rem;padding:1em}.nav-mobile.active{transform:translateX(0)}@keyframes a{0%{transform:translateX(200%)}to{transform:translateX(0)}}.nav-items-animation{animation:a 1s both}.intro{display:flex;justify-content:center;align-items:center;position:relative;background-image:url("../../dist/img/nasa-Q1p7bh3SHj8-unsplash (1).jpg");background-position:50%;background-size:cover;height:100vh;font-family:Overpass}.intro-bg{position:absolute;width:100%;height:100vh;background-color:rgba(0,0,10,.3)}.intro__text-heading{display:flex;flex-direction:column;justify-content:center;align-items:center}.intro__text-heading h1{font-size:3rem;z-index:1}.intro__text-heading h2{z-index:1}.intro__text-heading h2 .special-mark{color:#fff;font-size:3rem;vertical-align:5px}.intro__text-heading h2 .write-script{color:#0071e3;font-size:5rem}.ofert{display:flex;flex-direction:column;text-align:center;margin-top:2em}.ofert-heading{padding:1em;font-family:Overpass}.ofert-heading--title{font-size:3rem;margin-bottom:1em}.ofert-heading--description{font-weight:300;font-size:1.8rem}.ofert__box{display:flex;flex-direction:column}.ofert__box-img{padding:1em}.ofert__box-img img{max-width:100%}.ofert__box-text{padding:1em;line-height:150%;font-size:1.6rem;font-weight:300;text-align:left}.contact{margin:2em 0}.contact__box{width:100%;display:flex;flex-direction:column;padding:1em}.contact__box-form-box{display:flex;flex-direction:column;justify-content:center;align-items:center}@media (min-width:576px){.intro__text-heading h1{font-size:3.5rem}.intro__text-heading h2{font-size:5.3rem}.ofert-heading--title{font-size:4rem}.ofert-heading--description{font-size:2rem}.ofert__box-text{width:80%;margin:0 auto}}@media (min-width:768px){.intro__text-heading h1{font-size:4rem}.intro__text-heading h2{font-size:5.8rem}.ofert-heading--title{font-size:5rem}.ofert-heading--description{font-size:2.4rem}.ofert__box{flex-direction:row;justify-content:center;align-items:center}.ofert__box-img{width:50%}.ofert__box-img img{width:80%}.ofert__box-text{width:50%;font-size:1.8rem}.contact__box{flex-direction:row}.contact__box-img{width:50%;order:1}.contact__box-form{width:50%;display:flex;justify-content:center;align-items:center}.contact__box-form-box{width:100%}}@media (min-width:992px){.intro__text-heading h1{font-size:5rem}.intro__text-heading h2{font-size:6.3rem}.ofert-heading--title{font-size:5rem}.ofert-heading--description{font-size:3rem}.ofert__box-img{width:50%}.ofert__box-img-mobile{display:none}.ofert__box-img-desktop{display:block}.ofert__box-text{width:50%;font-size:1.8rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9jb21wb25lbnRzLnNjc3MiLCJtYWluLmNzcyIsIl9jb2xvcnMuc2NzcyIsIm1haW4uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0QkEsY0FDSSxZQUFBLEFBQ0EsaUJBQUEsQUFDQSxpQkFBQSxBQUNBLG9CQUFBLEFBQ0EsNkJBQUEsQUFDQSxrQkFBQSxBQUNBLGFBQUEsQUFDQSx5QkFBQSxBQUNBLGNBQUEsQUFDQSxvQkFBQSxBQUNBLGlCQUFBLEFBQ0EsVUFBQSxBQUNBLGtCQUFBLENDM0JKLEFEOEJBLFNBQ0ksZ0JBQUEsQUFDQSxnQkFBQSxDQzNCSixBRDhCQSxZQUNJLGtCQUFBLEFBQ0EsYUFBQSxBQUNBLGVBQUEsQUFDQSx5QkFBQSxBQUNBLHFCQUFBLEFBQ0EsZ0JBQUEsQUFDQSxXQUFBLEFBQ0Esc0JBQUEsQUFDQSxZQUFBLEFBQ0EsbUJBQUEsQUFDQSxxQ0FBQSxBQUNBLDJCQUFBLEFBQ0EsZUFBQSxBQUNBLGFBQUEsQUFDQSxvQkFBQSxDQzNCSixBRDZCSSxrQkFDSSx5QkVuRUksQUZvRUosMENBQUEsQUFDQSxXQUFBLEFBQ0EsMEJBQUEsQ0MzQlIsQUQ4QkksbUJBQ0ksMEJBQUEsQ0M1QlIsQURnQ0EsaUJBQ0ksa0JBQUEsQUFDQSxhQUFBLEFBQ0EsY0FBQSxDQzdCSixBRGdDQSxZQUNJLGNFckZRLEFGc0ZSLGVBQUEsQ0M3QkosQUV0REEsRUFDSSxTQUFBLEFBQ0EsVUFBQSxBQUNBLHFCQUFBLENGeURKLEFFdERBLEtBQ0ksdUJBQUEsQUFDQSxlQUFBLENGeURKLEFFdERBLEtBQ0ksaUJBQUEsQUFDQSw2QkFBQSxDRnlESixBRXREQSxJQUNJLGNBQUEsQ0Z5REosQUVyREEsU0FDSSxpQkFBQSxBQUNBLGFBQUEsQ0Z3REosQUVyREEsYUFDSSx1QkFBQSxBQUNBLFNBQUEsQUFDQSxXQUFBLEFBQ0EsZUFBQSxBQUNBLFdBQUEsQUFDQSxZQUFBLEFBQ0EsVUFBQSxBQUNBLGNBQUEsQ0Z3REosQUV0REksd0RBR0ksc0JEekNLLEFD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QUEsQ0ZqQmQsQUVtQmMsdUJBQ0ksVUFBQSxDRmpCbEIsQ0FDRixBRXlCQSx5QkFFUSx3QkFDSSxjQUFBLENGeEJWLEFFMkJNLHdCQUNJLGdCQUFBLENGekJWLEFFK0JVLHNCQUNJLGNBQUEsQ0Y3QmQsQUVnQ1UsNEJBQ0ksY0FBQSxDRjlCZCxBRW9DVSxnQkFDSSxTQUFBLENGbENkLEFFb0NjLHVCQUNJLFlBQUEsQ0ZsQ2xCLEFFcUNjLHdCQUNJLGFBQUEsQ0ZuQ2xCLEFFdUNVLGlCQUNJLFVBQUEsQUFDQSxnQkFBQSxDRnJDZCxDQUNGIiwiZmlsZSI6Im1haW4ubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIC5zZWN0aW9uLWhlYWRpbmcge1xuLy8gICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuLy8gICAgICY6OmFmdGVyIHtcbi8vICAgICAgICAgY29udGVudDogXCJcIjtcbi8vICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4vLyAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbi8vICAgICAgICAgcmlnaHQ6IDEwcHg7XG4vLyAgICAgICAgIHRvcDogNTAlO1xuLy8gICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4vLyAgICAgICAgIHdpZHRoOiA1MHB4O1xuLy8gICAgICAgICBoZWlnaHQ6IDJweDtcbi8vICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW4tYmx1ZTtcbi8vICAgICB9XG5cbi8vICAgICAmOjpiZWZvcmUge1xuLy8gICAgICAgICBjb250ZW50OiBcIlwiO1xuLy8gICAgICAgICBkaXNwbGF5OiBibG9jaztcbi8vICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuLy8gICAgICAgICBsZWZ0OiAxMHB4O1xuLy8gICAgICAgICB0b3A6IDUwJTtcbi8vICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuLy8gICAgICAgICB3aWR0aDogNTBweDtcbi8vICAgICAgICAgaGVpZ2h0OiAycHg7XG4vLyAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluLWJsdWU7XG4vLyAgICAgfVxuLy8gfVxuXG4uY29tbW9uLWlucHV0IHtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gICAgcGFkZGluZzogMC4yZW0gMWVtO1xuICAgIHBhZGRpbmctbGVmdDogMi41cmVtO1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmM2YzZjQ7XG4gICAgY29sb3I6ICMwZDBjMjI7XG4gICAgdHJhbnNpdGlvbjogLjNzIGVhc2U7XG4gICAgbWFyZ2luOiAwLjVlbSBhdXRvO1xuICAgIHdpZHRoOiA4MCU7XG4gICAgZm9udC1mYW1pbHk6ICdVYnVudHUnO1xufVxuXG50ZXh0YXJlYSB7XG4gICAgcmVzaXplOiB2ZXJ0aWNhbDtcbiAgICBtaW4taGVpZ2h0OiAyMDBweDtcbn1cblxuLmNvbW1vbi1idG4ge1xuICAgIHBhZGRpbmc6IDEuM2VtIDNlbTtcbiAgICBtYXJnaW46IDJlbSAwO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOiAyLjVweDtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGNvbG9yOiAjMDAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDQ1cHg7XG4gICAgYm94LXNoYWRvdzogMHB4IDhweCAxNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlIDBzO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGZvbnQtZmFtaWx5OiAnT3ZlcnBhc3MnO1xuXG4gICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluLWJsdWU7XG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAxNXB4IDIwcHggcmdiYSgzMCwgMzYsIDIwNCwgMC40KTtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtN3B4KTtcbiAgICB9XG5cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KTtcbiAgICB9XG59XG5cbi5zZWN0aW9uLWhlYWRpbmcge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW46IDFlbSAwO1xuICAgIGZvbnQtc2l6ZTogNHJlbTtcbn1cblxuLm1haW4tY29sb3Ige1xuICAgIGNvbG9yOiAkbWFpbi1ibHVlO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59IiwiLmNvbW1vbi1pbnB1dCB7XG4gIGhlaWdodDogNDBweDtcbiAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gIHBhZGRpbmc6IDAuMmVtIDFlbTtcbiAgcGFkZGluZy1sZWZ0OiAyLjVyZW07XG4gIGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmM2YzZjQ7XG4gIGNvbG9yOiAjMGQwYzIyO1xuICB0cmFuc2l0aW9uOiAwLjNzIGVhc2U7XG4gIG1hcmdpbjogMC41ZW0gYXV0bztcbiAgd2lkdGg6IDgwJTtcbiAgZm9udC1mYW1pbHk6IFwiVWJ1bnR1XCI7XG59XG5cbnRleHRhcmVhIHtcbiAgcmVzaXplOiB2ZXJ0aWNhbDtcbiAgbWluLWhlaWdodDogMjAwcHg7XG59XG5cbi5jb21tb24tYnRuIHtcbiAgcGFkZGluZzogMS4zZW0gM2VtO1xuICBtYXJnaW46IDJlbSAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxldHRlci1zcGFjaW5nOiAyLjVweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgY29sb3I6ICMwMDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogNDVweDtcbiAgYm94LXNoYWRvdzogMHB4IDhweCAxNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZSAwcztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvdXRsaW5lOiBub25lO1xuICBmb250LWZhbWlseTogXCJPdmVycGFzc1wiO1xufVxuLmNvbW1vbi1idG46aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3MWUzO1xuICBib3gtc2hhZG93OiAwcHggMTVweCAyMHB4IHJnYmEoMzAsIDM2LCAyMDQsIDAuNCk7XG4gIGNvbG9yOiAjZmZmO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTdweCk7XG59XG4uY29tbW9uLWJ0bjphY3RpdmUge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFweCk7XG59XG5cbi5zZWN0aW9uLWhlYWRpbmcge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMWVtIDA7XG4gIGZvbnQtc2l6ZTogNHJlbTtcbn1cblxuLm1haW4tY29sb3Ige1xuICBjb2xvcjogIzAwNzFlMztcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuKiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaHRtbCB7XG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xuICBmb250LXNpemU6IDYyLjUlO1xufVxuXG5ib2R5IHtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGZvbnQtZmFtaWx5OiBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbi53cmFwcGVyIHtcbiAgbWF4LXdpZHRoOiAxMjQwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uYnVyZ2VyLWljb24ge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgdG9wOiAyNXB4O1xuICByaWdodDogMjVweDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB3aWR0aDogNTBweDtcbiAgcGFkZGluZzogMWVtO1xuICB6LWluZGV4OiA5OTk7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5idXJnZXItaWNvbjpiZWZvcmUsIC5idXJnZXItaWNvbjphZnRlciwgLmJ1cmdlci1pY29uIGRpdiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDZweDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBtYXJnaW46IDdweCAwO1xuICB0cmFuc2l0aW9uOiAwLjVzO1xufVxuLmJ1cmdlci1pY29uLmJsYWNrOjphZnRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG59XG4uYnVyZ2VyLWljb24uYmxhY2s6OmJlZm9yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG59XG4uYnVyZ2VyLWljb24uYmxhY2sgZGl2IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbn1cbi5idXJnZXItaWNvbi5hY3RpdmU6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEycHgpIHJvdGF0ZSgxMzVkZWcpO1xufVxuLmJ1cmdlci1pY29uLmFjdGl2ZTphZnRlciB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTJweCkgcm90YXRlKC0xMzVkZWcpO1xufVxuLmJ1cmdlci1pY29uLmFjdGl2ZSBkaXYge1xuICB0cmFuc2Zvcm06IHNjYWxlKDApO1xufVxuXG4ubmF2LW1vYmlsZSB7XG4gIGhlaWdodDogMTAwdmg7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTYyZGVnLCByZ2IoMCwgMTEzLCAyMjcpIDIyJSwgcmdiKDAsIDUzLCAyMTcpIDc5JSk7XG4gIHotaW5kZXg6IDk5ODtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxcztcbn1cbi5uYXYtbW9iaWxlX19tZW51IHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMmVtO1xufVxuLm5hdi1tb2JpbGVfX21lbnUgPiBsaSB7XG4gIG1hcmdpbjogMWVtIDA7XG4gIHBhZGRpbmc6IDFlbTtcbn1cbi5uYXYtbW9iaWxlX19tZW51LWl0ZW0ge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDNyZW07XG4gIHBhZGRpbmc6IDFlbTtcbn1cbi5uYXYtbW9iaWxlLmFjdGl2ZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbn1cblxuQGtleWZyYW1lcyBuYXZJdGVtc0FuaW1hdGlvbiB7XG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTtcbiAgfVxuICB0byB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICB9XG59XG4ubmF2LWl0ZW1zLWFuaW1hdGlvbiB7XG4gIGFuaW1hdGlvbjogbmF2SXRlbXNBbmltYXRpb24gMXMgYm90aDtcbn1cblxuLmludHJvIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9kaXN0L2ltZy9uYXNhLVExcDdiaDNTSGo4LXVuc3BsYXNoICgxKS5qcGdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgZm9udC1mYW1pbHk6IFwiT3ZlcnBhc3NcIjtcbn1cbi5pbnRyby1iZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMTAsIDAuMyk7XG59XG4uaW50cm9fX3RleHQtaGVhZGluZyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLmludHJvX190ZXh0LWhlYWRpbmcgaDEge1xuICBmb250LXNpemU6IDNyZW07XG4gIHotaW5kZXg6IDE7XG59XG4uaW50cm9fX3RleHQtaGVhZGluZyBoMiB7XG4gIHotaW5kZXg6IDE7XG59XG4uaW50cm9fX3RleHQtaGVhZGluZyBoMiAuc3BlY2lhbC1tYXJrIHtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbiAgdmVydGljYWwtYWxpZ246IDVweDtcbn1cbi5pbnRyb19fdGV4dC1oZWFkaW5nIGgyIC53cml0ZS1zY3JpcHQge1xuICBjb2xvcjogIzAwNzFlMztcbiAgZm9udC1zaXplOiA1cmVtO1xufVxuXG4ub2ZlcnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDJlbTtcbn1cbi5vZmVydC1oZWFkaW5nIHtcbiAgcGFkZGluZzogMWVtO1xuICBmb250LWZhbWlseTogXCJPdmVycGFzc1wiO1xufVxuLm9mZXJ0LWhlYWRpbmctLXRpdGxlIHtcbiAgZm9udC1zaXplOiAzcmVtO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG4ub2ZlcnQtaGVhZGluZy0tZGVzY3JpcHRpb24ge1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXNpemU6IDEuOHJlbTtcbn1cbi5vZmVydF9fYm94IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbi5vZmVydF9fYm94LWltZyB7XG4gIHBhZGRpbmc6IDFlbTtcbn1cbi5vZmVydF9fYm94LWltZyBpbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG4ub2ZlcnRfX2JveC10ZXh0IHtcbiAgcGFkZGluZzogMWVtO1xuICBsaW5lLWhlaWdodDogMTUwJTtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi5jb250YWN0IHtcbiAgbWFyZ2luOiAyZW0gMDtcbn1cbi5jb250YWN0X19ib3gge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgcGFkZGluZzogMWVtO1xufVxuLmNvbnRhY3RfX2JveC1mb3JtLWJveCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmludHJvX190ZXh0LWhlYWRpbmcgaDEge1xuICAgIGZvbnQtc2l6ZTogMy41cmVtO1xuICB9XG4gIC5pbnRyb19fdGV4dC1oZWFkaW5nIGgyIHtcbiAgICBmb250LXNpemU6IDUuM3JlbTtcbiAgfVxuICAub2ZlcnQtaGVhZGluZy0tdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNHJlbTtcbiAgfVxuICAub2ZlcnQtaGVhZGluZy0tZGVzY3JpcHRpb24ge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgfVxuICAub2ZlcnRfX2JveC10ZXh0IHtcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmludHJvX190ZXh0LWhlYWRpbmcgaDEge1xuICAgIGZvbnQtc2l6ZTogNHJlbTtcbiAgfVxuICAuaW50cm9fX3RleHQtaGVhZGluZyBoMiB7XG4gICAgZm9udC1zaXplOiA1LjhyZW07XG4gIH1cbiAgLm9mZXJ0LWhlYWRpbmctLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDVyZW07XG4gIH1cbiAgLm9mZXJ0LWhlYWRpbmctLWRlc2NyaXB0aW9uIHtcbiAgICBmb250LXNpemU6IDIuNHJlbTtcbiAgfVxuICAub2ZlcnRfX2JveCB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG4gIC5vZmVydF9fYm94LWltZyB7XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxuICAub2ZlcnRfX2JveC1pbWcgaW1nIHtcbiAgICB3aWR0aDogODAlO1xuICB9XG4gIC5vZmVydF9fYm94LXRleHQge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgZm9udC1zaXplOiAxLjhyZW07XG4gIH1cbiAgLmNvbnRhY3RfX2JveCB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgfVxuICAuY29udGFjdF9fYm94LWltZyB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBvcmRlcjogMTtcbiAgfVxuICAuY29udGFjdF9fYm94LWZvcm0ge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG4gIC5jb250YWN0X19ib3gtZm9ybS1ib3gge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmludHJvX190ZXh0LWhlYWRpbmcgaDEge1xuICAgIGZvbnQtc2l6ZTogNXJlbTtcbiAgfVxuICAuaW50cm9fX3RleHQtaGVhZGluZyBoMiB7XG4gICAgZm9udC1zaXplOiA2LjNyZW07XG4gIH1cbiAgLm9mZXJ0LWhlYWRpbmctLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDVyZW07XG4gIH1cbiAgLm9mZXJ0LWhlYWRpbmctLWRlc2NyaXB0aW9uIHtcbiAgICBmb250LXNpemU6IDNyZW07XG4gIH1cbiAgLm9mZXJ0X19ib3gtaW1nIHtcbiAgICB3aWR0aDogNTAlO1xuICB9XG4gIC5vZmVydF9fYm94LWltZy1tb2JpbGUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLm9mZXJ0X19ib3gtaW1nLWRlc2t0b3Age1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIC5vZmVydF9fYm94LXRleHQge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgZm9udC1zaXplOiAxLjhyZW07XG4gIH1cbn0iLCIkbWFpbi1ibHVlOiAjMDA3MWUzO1xuJHB1cmUtd2hpdGU6ICNmZmY7XG4kYmxhY2stc2hhZG93OiByZ2JhKDAsIDAsIDEwLCAwLjMpO1xuJGJhY2tncm91bmQtZ3JhZGllbnQ6IGxpbmVhci1ncmFkaWVudCgxNjJkZWcsIHJnYmEoMCwgMTEzLCAyMjcsIDEpIDIyJSwgcmdiYSgwLCA1MywgMjE3LCAxKSA3OSUpOyIsIkBpbXBvcnQgJy4vX2NvbG9ycy5zY3NzJztcbkBpbXBvcnQgJy4vX2NvbXBvbmVudHMuc2Nzcyc7XG5cbioge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmh0bWwge1xuICAgIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xuICAgIGZvbnQtc2l6ZTogNjIuNSU7XG59XG5cbmJvZHkge1xuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICAgIGZvbnQtZmFtaWx5OiAnVWJ1bnR1Jywgc2Fucy1zZXJpZjtcbn1cblxuaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cblxuLndyYXBwZXIge1xuICAgIG1heC13aWR0aDogMTI0MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uYnVyZ2VyLWljb24ge1xuICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAgIHRvcDogMjVweDtcbiAgICByaWdodDogMjVweDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgd2lkdGg6IDUwcHg7XG4gICAgcGFkZGluZzogMWVtO1xuICAgIHotaW5kZXg6IDk5OTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyLFxuICAgICYgZGl2IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHB1cmUtd2hpdGU7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBoZWlnaHQ6IDZweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICBtYXJnaW46IDdweCAwO1xuICAgICAgICB0cmFuc2l0aW9uOiAwLjVzO1xuICAgIH1cblxuICAgICYuYmxhY2s6OmFmdGVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgICB9XG5cbiAgICAmLmJsYWNrOjpiZWZvcmUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICAgIH1cblxuICAgICYuYmxhY2sgZGl2IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgICB9XG5cblxuICAgICYuYWN0aXZlOmJlZm9yZSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMnB4KSByb3RhdGUoMTM1ZGVnKTtcbiAgICB9XG5cbiAgICAmLmFjdGl2ZTphZnRlciB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTJweCkgcm90YXRlKC0xMzVkZWcpO1xuICAgIH1cblxuICAgICYuYWN0aXZlIGRpdiB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XG4gICAgfVxufVxuXG4ubmF2LW1vYmlsZSB7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAkYmFja2dyb3VuZC1ncmFkaWVudDtcbiAgICB6LWluZGV4OiA5OTg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXM7XG5cbiAgICAmX19tZW51IHtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgcGFkZGluZzogMmVtO1xuXG4gICAgICAgICY+bGkge1xuICAgICAgICAgICAgbWFyZ2luOiAxZW0gMDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbTtcbiAgICAgICAgfVxuXG4gICAgICAgICYtaXRlbSB7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgIGNvbG9yOiAkcHVyZS13aGl0ZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYuYWN0aXZlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIH1cbn1cblxuQGtleWZyYW1lcyBuYXZJdGVtc0FuaW1hdGlvbiB7XG4gICAgZnJvbSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTtcbiAgICB9XG5cbiAgICB0byB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB9XG59XG5cbi5uYXYtaXRlbXMtYW5pbWF0aW9uIHtcbiAgICBhbmltYXRpb246IG5hdkl0ZW1zQW5pbWF0aW9uIDFzIGJvdGg7XG59XG5cbi5pbnRybyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi9kaXN0L2ltZy9uYXNhLVExcDdiaDNTSGo4LXVuc3BsYXNoXFwgXFwoMVxcKS5qcGcnKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGZvbnQtZmFtaWx5OiAnT3ZlcnBhc3MnO1xuXG4gICAgJi1iZyB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwdmg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRibGFjay1zaGFkb3c7XG4gICAgfVxuXG5cbiAgICAmX190ZXh0IHtcblxuICAgICAgICAmLWhlYWRpbmcge1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICAvLyBjb2xvcjogJHB1cmUtd2hpdGU7XG5cbiAgICAgICAgICAgICYgaDEge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICAgICAgICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmIGgyIHtcbiAgICAgICAgICAgICAgICB6LWluZGV4OiAxO1xuXG4gICAgICAgICAgICAgICAgJiAuc3BlY2lhbC1tYXJrIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRwdXJlLXdoaXRlO1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDNyZW07XG4gICAgICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiA1cHg7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgJiAud3JpdGUtc2NyaXB0IHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRtYWluLWJsdWU7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXJlbTtcblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLm9mZXJ0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi10b3A6IDJlbTtcblxuICAgICYtaGVhZGluZyB7XG4gICAgICAgIHBhZGRpbmc6IDFlbTtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdPdmVycGFzcyc7XG5cbiAgICAgICAgJi0tdGl0bGUge1xuICAgICAgICAgICAgZm9udC1zaXplOiAzcmVtO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgICAgICB9XG5cbiAgICAgICAgJi0tZGVzY3JpcHRpb24ge1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS44cmVtO1xuICAgICAgICB9XG4gICAgfVxuXG5cbiAgICAmX19ib3gge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgICAgICYtaW1nIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbTtcblxuICAgICAgICAgICAgJiBpbWcge1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICYtdGV4dCB7XG4gICAgICAgICAgICBwYWRkaW5nOiAxZW07XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMTUwJTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5jb250YWN0IHtcbiAgICBtYXJnaW46IDJlbSAwO1xuXG4gICAgJl9fYm94IHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIHBhZGRpbmc6IDFlbTtcblxuICAgICAgICAmLWZvcm0ge1xuXG4gICAgICAgICAgICAmLWJveCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vID09PT09PT09PT09PT09PT09PVxuLy8gICAgIE1FRElBIFxuLy8gPT09PT09PT09PT09PT09PT09XG5cbkBtZWRpYShtaW4td2lkdGg6NTc2cHgpIHtcbiAgICAuaW50cm9fX3RleHQtaGVhZGluZyB7XG4gICAgICAgICYgaDEge1xuICAgICAgICAgICAgZm9udC1zaXplOiAzLjVyZW07XG4gICAgICAgIH1cblxuICAgICAgICAmIGgyIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNS4zcmVtO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLm9mZXJ0IHtcbiAgICAgICAgJi1oZWFkaW5nIHtcbiAgICAgICAgICAgICYtLXRpdGxlIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDRyZW07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICYtLWRlc2NyaXB0aW9uIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmX19ib3gtdGV4dCB7XG4gICAgICAgICAgICB3aWR0aDogODAlO1xuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuQG1lZGlhKG1pbi13aWR0aDo3NjhweCkge1xuICAgIC5pbnRyb19fdGV4dC1oZWFkaW5nIHtcbiAgICAgICAgJiBoMSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDRyZW07XG4gICAgICAgIH1cblxuICAgICAgICAmIGgyIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNS44cmVtO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLm9mZXJ0IHtcbiAgICAgICAgJi1oZWFkaW5nIHtcbiAgICAgICAgICAgICYtLXRpdGxlIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDVyZW07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICYtLWRlc2NyaXB0aW9uIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDIuNHJlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICZfX2JveCB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgICAgICAgICAmLWltZyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDUwJTtcblxuICAgICAgICAgICAgICAgICYgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICYtdGV4dCB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuOHJlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5jb250YWN0IHtcbiAgICAgICAgJl9fYm94IHtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG5cbiAgICAgICAgICAgICYtaW1nIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogNTAlO1xuICAgICAgICAgICAgICAgIG9yZGVyOiAxO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmLWZvcm0ge1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgICAgICAgICAgICAgJi1ib3gge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG5AbWVkaWEobWluLXdpZHRoOjk5MnB4KSB7XG4gICAgLmludHJvX190ZXh0LWhlYWRpbmcge1xuICAgICAgICAmIGgxIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNXJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgICYgaDIge1xuICAgICAgICAgICAgZm9udC1zaXplOiA2LjNyZW07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAub2ZlcnQge1xuICAgICAgICAmLWhlYWRpbmcge1xuICAgICAgICAgICAgJi0tdGl0bGUge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXJlbTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJi0tZGVzY3JpcHRpb24ge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICZfX2JveCB7XG5cbiAgICAgICAgICAgICYtaW1nIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogNTAlO1xuXG4gICAgICAgICAgICAgICAgJi1tb2JpbGUge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICYtZGVza3RvcCB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJi10ZXh0IHtcbiAgICAgICAgICAgICAgICB3aWR0aDogNTAlO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS44cmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4vLyBAbWVkaWEobWluLXdpZHRoOjEyMDBweCkge1xuLy8gICAgIC5pbnRybyB7XG4vLyAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vLi4vZGlzdC9pbWcvaW50cm8tYmctZGVza3RvcC5qcGcnKTtcbi8vICAgICB9XG5cbi8vIH1cblxuLy8gQG1lZGlhKG1pbi13aWR0aDoxNTAwcHgpIHtcbi8vICAgICAuaW50cm8ge1xuLy8gICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uL2Rpc3QvaW1nL2ludHJvLWJnLWxhcmdlLmpwZycpO1xuLy8gICAgIH1cblxuLy8gfVxuXG5cblxuLy8gPT09PT09PT09PT09XG4vLyBLZXkgRnJhbWVzIl19 */
